{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA9CEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAMC,iBAEN,MAAMC,EAAS,CACbb,MAAOc,OAAOH,EAAMI,cAAcC,SAAShB,MAAMiB,OACjDC,KAAMJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAC/CE,OAAQR,EAAMI,cAAcC,SAASG,OAAOF,QAGtCjB,MAAAoB,EAAKF,KAAEA,EAAIC,OAAEA,GAAWN,EAChC,IAAIQ,EAAYD,EAChB,IAAK,IAAIE,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EAErDxB,EAAcwB,EAAUD,GACrBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,OAExC2B,QAAQC,IAAI,uBAAqB7B,QAAiBC,MAAU,IAE7D6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOK,QACd,sBAAoB/B,QAAiBC,OAEvC2B,QAAQC,IAAI,sBAAoB7B,QAAeC,MAAU,IAG7DqB,GAAwBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', handlePromise);\n\nfunction handlePromise(event) {\n  event.preventDefault();\n\n  const params = {\n    delay: Number(event.currentTarget.elements.delay.value),\n    step: Number(event.currentTarget.elements.step.value),\n    amount: event.currentTarget.elements.amount.value,\n  };\n\n  const { delay, step, amount } = params;\n  let delayStep = delay;\n  for (let position = 1; position <= amount; position += 1) {\n    // console.log(delayStep);\n    createPromise(position, delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayStep = delayStep + step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","params","Number","currentTarget","elements","value","step","amount","delay1","delayStep","position1","then","$parcel$interopDefault","Notify","success","console","log","catch","warning"],"version":3,"file":"03-promises.209a47ad.js.map"}